<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- DOCTip을 가져옴,실제 DB를 설정하기 위해서 따옴 -->
  <mapper namespace="mybatis.boardMapper"><!--네임스페이스는 보통 경로를 적어주면 된다. 또한 dao로 DB를 했던것을 이제는 xml로 DB를 하겠다는뜻 -->
  	<select id="getList" resultType="BoardDto"><!--따로 +를 해줄필요가 없으며 자유롭게 select할 sql문을 사용하면 된다. resultType(보내는 역할)는 밑에 sql문이 DB를 통해 결과를 가져오면 Dto에 다시 값을 보내야하기 때문에 사용한다.(즉 return타입) -->
  		select * from tblSpringBoard
  		order by b_seq desc
  	</select>
  	<!-- Aliass를 통해 com.netsong7.board.repository.BoardDto를 BoardDto로 별명을 지워 줄여서 쓸수있다.  -->
  	<insert id="write" parameterType="BoardDto"><!-- sql문을 조금 고쳐줘야한다. 즉, ? 대신에 #{} 형식으로 바꿔주면 된다.(()안에 명은 기존 명같게 해준다.), parameterType(전달하는 역할)는 dto로 값을 전달받기위해서 사용된다. -->
  		insert into tblSpringBoard(b_title, b_content, b_writer,
		b_regdate, b_hitcount, b_password) values(#{b_title},#{b_content},#{b_writer},now(),0,#{b_password})
  	</insert>
  	
  	<select id="findBySeq" parameterType="int" resultType="BoardDto"><!--객체일경우 객체타입지정, 정수일경우 정수타입지정 -->
  		select * from tblSpringBoard where b_seq=#{b_seq}
  	</select>
  	
	<update id="update" parameterType="BoardDto">
		update spring4fs.tblSpringBoard set b_title=#{b_title}, b_content=#{b_content} where b_seq=#{b_seq}
	</update>
	
	<delete id="delete" parameterType="int">
  		delete from tblSpringBoard where b_seq=#{b_seq}
  	</delete>
	
  </mapper>